tomcat8 opengrok1.3.16

1、安装JDK1.8
sudo apt install openjdk-8-jdk
sudo update-alternatives --config java
sudo update-alternatives --config javac

2、下载universal-ctags源码编译出ctags二进制可执行文件
git clone https://github.com/universal-ctags/ctags.git
cd ctags
./autogen.sh 
./configure
make


3、下载tomcat  tar包解压
https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.76/bin/apache-tomcat-8.5.76.tar.gz


4、下载解压OpenGrok tar包，得到apache-tomcat-8.5.76文件夹
https://github.com/oracle/opengrok/releases/download/1.3.16/opengrok-1.3.16.tar.gz


5、在apache-tomcat-8.5.76下创建三个目录etc data src
mkdir opengrok-1.3.16/etc opengrok-1.3.16/data  opengrok-1.3.16/src
etc目录下存放待会同步源码时产生的configuration.xml文件
data目录下存放待会同步源码时产生的索引文件
src下存放需要同步的源码文件，放源文件和软连接都行



6、把OpenGrok作为webapp安装到tomcat
cp opengrok-1.3.16/lib/source.war  apache-tomcat-8.5.76/webapps/
启动tomcat
apache-tomcat-8.5.76/bin/startup.sh
浏览器打开一下127.0.0.1:8080看是否有tomcat欢迎界面
然后再打开127.0.0.1:8080/source这个webapp,此时可以在apache-tomcat-8.5.76/webapps/
下看到多了一个source文件夹，编辑里面的WEB-INF/web.xml配置文件，把
 <context-param>属性里面的param-value属性改成待会同步源码时产生的configuration.xml文件的绝对路径加文件名
然后关闭tomcat：apache-tomcat-8.5.76/bin/shutdown.sh
vim apache-tomcat-8.5.76/webapps/source/WEB-INF/web.xml
/home/ghj/work/opengrok/opengrok-1.3.16/etc/configuration.xml
apache-tomcat-8.5.76/webapps/



7、将需要同步的文件以软连接放入opengrok-1.3.16/src
ln -s ../../../rk3568/android11   rk3568






8、构建脚本用于同步源码
#!/bin/bash
export OPENGROK_TOMCAT_BASE=/home/haijie.gong/tools/opengrok/apache-tomcat-8.5.76
export OPENGROK_SRC_ROOT=/home/haijie.gong/tools/opengrok/src
export OPENGROK_DATA_ROOT=/home/haijie.gong/tools/opengrok/data
java -Xmx12g\
     -jar /home/haijie.gong/tools/opengrok/opengrok-1.3.16/lib/opengrok.jar \
     -c /home/haijie.gong/tools/opengrok/ctags \
     -s $OPENGROK_SRC_ROOT \
     -d $OPENGROK_DATA_ROOT -P -S \
     -W $OPENGROK_DATA_ROOT/configuration.xml


9、构建脚本用于启动tomcat
#!/bin/bash
export OPENGROK_TOMCAT_BASE=/home/ghj/work/opengrok/apache-tomcat-8.5.76
export OPENGROK_SRC_ROOT=/home/ghj/work/opengrok/opengrok-1.3.16/src
export OPENGROK_DATA_ROOT=/home/ghj/work/opengrok/opengrok-1.3.16/data
/home/haijie.gong/tools/opengrok/apache-tomcat-8.5.76/bin/startup.sh

注，高版本组合例如tomcat9+opengrok最新版+jdk11可以设置如下环境变量指向configuration.xml
OPENGROK_READ_XML_CONFIGURATION

注意开启win10上面的  大小写区分   路径长度限制   符号链接权限


需要预先安装git工具，在环境变量里能找得到

jdk-17.0.4.1
ctags最新

opengrok-1.7.36
apache-tomcat-10.0.26
apache-tomcat-10.1.0

apache-tomcat-10.0.13
opengrok-1.7.24

apache-tomcat-10.0.8
opengrok-1.7.13




JAVA_HOME				C:\jdk-19
CLASSPATH				.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar
CATALINA_HOME			C:\opengrok\apache-tomcat-10.0.27
OPENGROK_TOMCAT_BASE	C:\opengrok\apache-tomcat-10.0.27
OPENGROK_DATA_ROOT		C:\opengrok\data
OPENGROK_SRC_ROOT		Z:\opengrok_src

PATH
%JAVA_HOME%\bin
C:\opengrok\ctags










在host上执行
docker load -i opengrok.tar

在 opengrok_home  目录下创建src  etc  data 三个目录
mkdir -p opengrok_home/src
mkdir -p opengrok_home/etc
mkdir -p opengrok_home/data

docker run -d \
    --restart always \
    --name opengrok \
    -v /home/haijie.gong/opengrok_home/src/:/opengrok/src/ \
    -v /home/haijie.gong/opengrok_home/etc/:/opengrok/etc/ \
    -v /home/haijie.gong/opengrok_home/data/:/opengrok/data/ \
    opengrok/docker:master

执行之后容器内的tomcat服务器和opengrok webapp就在容器内的8080端口启动了，浏览器可以直接访问。
host的80端口映射到了docker容器中的8080端口
host的/home/richard/opengrok_home/src/路径映射到了docker容器中的/opengrok/src/ 路径
host的/home/richard/opengrok_home/etc/路径映射到了docker容器中的/opengrok/etc/ 路径
host的/home/richard/opengrok_home/data/路径映射到了docker容器中的/opengrok/data/ 路径



把新的内容拷贝到host的/home/richard/opengrok_home/src/后需要更新索引：
在host上首先执行如下命令进入opengrok容器：
docker exec -it opengrok bash

进入容器后，然后再执行如下命令更新索引：
opengrok-indexer \
    -J=-Djava.util.logging.config.file=/opengrok/etc/logging.properties \
    -a /opengrok/lib/opengrok.jar -- \
    -c /usr/local/bin/ctags \
    -s /opengrok/src -d /opengrok/data -H -P -S -G \
    -W /opengrok/etc/configuration.xml -U http://localhost:8080


apt-get remove docker-ce docker-ce-cli containerd.io
apt-get install ca-certificates curl gnupg lsb-release
curl -fsSL http://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -
add-apt-repository "deb [arch=amd64] http://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu $(lsb_release -cs) stable"
apt-get install docker-ce docker-ce-cli containerd.io
usermod -aG docker $USER

docker run -d \
 --restart always \
  --name opengrok \
   -p 80:8080/tcp \
    -v /home/ghj/opengrok_home/src/:/opengrok/src/ \
     -v /home/ghj/opengrok_home/etc/:/opengrok/etc/ \
     -v /home/ghj/opengrok_home/data/:/opengrok/data/ \
     opengrok/docker:master




